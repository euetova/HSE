{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Будем использовать библиотеку Orange 2.7:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied (use --upgrade to upgrade): Orange in /home/jupyter/env/lib/python2.7/site-packages\r\n",
      "Requirement already satisfied (use --upgrade to upgrade): setuptools in /home/jupyter/env/lib/python2.7/site-packages/setuptools-19.2-py2.7.egg (from Orange)\r\n",
      "Requirement already satisfied (use --upgrade to upgrade): numpy in /home/jupyter/env/lib/python2.7/site-packages (from Orange)\r\n",
      "Requirement already satisfied (use --upgrade to upgrade): scipy in /home/jupyter/env/lib/python2.7/site-packages (from Orange)\r\n",
      "Cleaning up...\r\n"
     ]
    }
   ],
   "source": [
    "! pip install Orange\n",
    "import Orange"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Рассмотрим пример из документации: http://orange.biolab.si/docs/latest/reference/rst/Orange.associate.html"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "data = Orange.data.Table(\"market-basket.basket\")\n",
    "# загружаем данные из набора c покупками"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[], {\"Bread\":1.000, \"Milk\":1.000},\n",
       " [], {\"Bread\":1.000, \"Diapers\":1.000, \"Beer\":1.000, \"Eggs\":1.000},\n",
       " [], {\"Milk\":1.000, \"Diapers\":1.000, \"Beer\":1.000, \"Cola\":1.000},\n",
       " [], {\"Bread\":1.000, \"Milk\":1.000, \"Diapers\":1.000, \"Beer\":1.000},\n",
       " [], {\"Bread\":1.000, \"Milk\":1.000, \"Diapers\":1.000, \"Cola\":1.000}]"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Supp Conf  Rule\n",
      " 0.4  1.0  Cola -> Diapers\n",
      " 0.4  0.5  Diapers -> Cola\n",
      " 0.4  1.0  Cola -> Diapers Milk\n",
      " 0.4  1.0  Cola Diapers -> Milk\n",
      " 0.4  1.0  Cola Milk -> Diapers\n",
      " 0.4  0.5  Diapers -> Cola Milk\n",
      " 0.4  0.7  Diapers Milk -> Cola\n",
      " 0.4  0.5  Milk -> Cola Diapers\n",
      " 0.4  1.0  Cola -> Milk\n",
      " 0.4  0.5  Milk -> Cola\n",
      " 0.6  1.0  Beer -> Diapers\n",
      " 0.6  0.8  Diapers -> Beer\n",
      " 0.4  0.7  Beer -> Diapers Milk\n",
      " 0.4  0.7  Beer Diapers -> Milk\n",
      " 0.4  1.0  Beer Milk -> Diapers\n",
      " 0.4  0.5  Diapers -> Beer Milk\n",
      " 0.4  0.7  Diapers Milk -> Beer\n",
      " 0.4  0.5  Milk -> Beer Diapers\n",
      " 0.4  0.7  Beer -> Diapers Bread\n",
      " 0.4  0.7  Beer Diapers -> Bread\n",
      " 0.4  1.0  Beer Bread -> Diapers\n",
      " 0.4  0.5  Diapers -> Beer Bread\n",
      " 0.4  0.7  Diapers Bread -> Beer\n",
      " 0.4  0.5  Bread -> Beer Diapers\n",
      " 0.4  0.7  Beer -> Milk\n",
      " 0.4  0.5  Milk -> Beer\n",
      " 0.4  0.7  Beer -> Bread\n",
      " 0.4  0.5  Bread -> Beer\n",
      " 0.6  0.8  Diapers -> Milk\n",
      " 0.6  0.8  Milk -> Diapers\n",
      " 0.4  0.5  Diapers -> Milk Bread\n",
      " 0.4  0.7  Diapers Milk -> Bread\n",
      " 0.4  0.7  Diapers Bread -> Milk\n",
      " 0.4  0.5  Milk -> Diapers Bread\n",
      " 0.4  0.7  Milk Bread -> Diapers\n",
      " 0.4  0.5  Bread -> Diapers Milk\n",
      " 0.6  0.8  Diapers -> Bread\n",
      " 0.6  0.8  Bread -> Diapers\n",
      " 0.6  0.8  Milk -> Bread\n",
      " 0.6  0.8  Bread -> Milk\n"
     ]
    }
   ],
   "source": [
    "rules = Orange.associate.AssociationRulesSparseInducer(data, support=0.4)\n",
    "# находим все ассоциативные правила с поддержкой 0.3\n",
    "print \"%4s %4s  %s\" % (\"Supp\", \"Conf\", \"Rule\")\n",
    "for r in rules:\n",
    "    print \"%4.1f %4.1f  %s\" % (r.support, r.confidence, r)\n",
    "#выводим правила и значения поддержки и значимости"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(0.40) Cola\n",
      "(0.40) Cola Diapers\n",
      "(0.40) Cola Diapers Milk\n",
      "(0.40) Cola Milk\n",
      "(0.60) Beer\n",
      "(0.60) Beer Diapers\n",
      "(0.40) Beer Diapers Milk\n",
      "(0.40) Beer Diapers Bread\n",
      "(0.40) Beer Milk\n",
      "(0.40) Beer Bread\n",
      "(0.80) Diapers\n",
      "(0.60) Diapers Milk\n",
      "(0.40) Diapers Milk Bread\n",
      "(0.60) Diapers Bread\n",
      "(0.80) Milk\n",
      "(0.60) Milk Bread\n",
      "(0.80) Bread\n"
     ]
    }
   ],
   "source": [
    "data = Orange.data.Table(\"market-basket.basket\")\n",
    "\n",
    "ind = Orange.associate.AssociationRulesSparseInducer(support=0.4, storeExamples = True)\n",
    "itemsets = ind.get_itemsets(data)\n",
    "for itemset, tids in itemsets:\n",
    "    print \"(%4.2f) %s\" % (len(tids)/float(len(data)),\n",
    "                          \" \".join(data.domain[item].name for item in itemset))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Есть ли что-то интересное в рецептах блюд?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "url = \"https://dl.dropboxusercontent.com/u/79652444/cook.json?dl=1\"  # dl=1 is important\n",
    "import urllib\n",
    "u = urllib.urlopen(url)\n",
    "data = u.read()\n",
    "u.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "with open('cook.json', \"wb\") as f :\n",
    "    f.write(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "import json\n",
    "\n",
    "with open(\"cook.json\") as json_file:\n",
    "    json_data = json.load(json_file)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[{u'cuisine': u'greek',\n",
       "  u'id': 10259,\n",
       "  u'ingredients': [u'romaine lettuce',\n",
       "   u'black olives',\n",
       "   u'grape tomatoes',\n",
       "   u'garlic',\n",
       "   u'pepper',\n",
       "   u'purple onion',\n",
       "   u'seasoning',\n",
       "   u'garbanzo beans',\n",
       "   u'feta cheese crumbles']},\n",
       " {u'cuisine': u'southern_us',\n",
       "  u'id': 25693,\n",
       "  u'ingredients': [u'plain flour',\n",
       "   u'ground pepper',\n",
       "   u'salt',\n",
       "   u'tomatoes',\n",
       "   u'ground black pepper',\n",
       "   u'thyme',\n",
       "   u'eggs',\n",
       "   u'green tomatoes',\n",
       "   u'yellow corn meal',\n",
       "   u'milk',\n",
       "   u'vegetable oil']},\n",
       " {u'cuisine': u'filipino',\n",
       "  u'id': 20130,\n",
       "  u'ingredients': [u'eggs',\n",
       "   u'pepper',\n",
       "   u'salt',\n",
       "   u'mayonaise',\n",
       "   u'cooking oil',\n",
       "   u'green chilies',\n",
       "   u'grilled chicken breasts',\n",
       "   u'garlic powder',\n",
       "   u'yellow onion',\n",
       "   u'soy sauce',\n",
       "   u'butter',\n",
       "   u'chicken livers']},\n",
       " {u'cuisine': u'indian',\n",
       "  u'id': 22213,\n",
       "  u'ingredients': [u'water', u'vegetable oil', u'wheat', u'salt']},\n",
       " {u'cuisine': u'indian',\n",
       "  u'id': 13162,\n",
       "  u'ingredients': [u'black pepper',\n",
       "   u'shallots',\n",
       "   u'cornflour',\n",
       "   u'cayenne pepper',\n",
       "   u'onions',\n",
       "   u'garlic paste',\n",
       "   u'milk',\n",
       "   u'butter',\n",
       "   u'salt',\n",
       "   u'lemon juice',\n",
       "   u'water',\n",
       "   u'chili powder',\n",
       "   u'passata',\n",
       "   u'oil',\n",
       "   u'ground cumin',\n",
       "   u'boneless chicken skinless thigh',\n",
       "   u'garam masala',\n",
       "   u'double cream',\n",
       "   u'natural yogurt',\n",
       "   u'bay leaf']}]"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "json_data[:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "data = json_data\n",
    "f = open('cook.basket', 'w')\n",
    "for i in data:\n",
    "    f.write(u\", \".join(i[u'ingredients']).encode('utf-8') + \"\\n\")\n",
    "f.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "data = Orange.data.Table(\"cook.basket\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[], {\"romaine lettuce\":1.000, \"black olives\":1.000, \"grape tomatoes\":1.000, \"garlic\":1.000, \"pepper\":1.000, \"purple onion\":1.000, \"seasoning\":1.000, \"garbanzo beans\":1.000, \"feta cheese crumbles\":1.000},\n",
       " [], {\"plain flour\":1.000, \"ground pepper\":1.000, \"salt\":1.000, \"tomatoes\":1.000, \"ground black pepper\":1.000, \"thyme\":1.000, \"eggs\":1.000, \"green tomatoes\":1.000, \"yellow corn meal\":1.000, \"milk\":1.000, \"vegetable oil\":1.000},\n",
       " [], {\"eggs\":1.000, \"pepper\":1.000, \"salt\":1.000, \"mayonaise\":1.000, \"cooking oil\":1.000, \"green chilies\":1.000, \"grilled chicken breasts\":1.000, \"garlic powder\":1.000, \"yellow onion\":1.000, \"soy sauce\":1.000, \"butter\":1.000, \"chicken livers\":1.000},\n",
       " [], {\"water\":1.000, \"vegetable oil\":1.000, \"wheat\":1.000, \"salt\":1.000},\n",
       " [], {\"black pepper\":1.000, \"shallots\":1.000, \"cornflour\":1.000, \"cayenne pepper\":1.000, \"onions\":1.000, \"garlic paste\":1.000, \"milk\":1.000, \"butter\":1.000, \"salt\":1.000, \"lemon juice\":1.000, \"water\":1.000, \"chili powder\":1.000, \"passata\":1.000, \"oil\":1.000, \"ground cumin\":1.000, \"boneless chicken skinless thigh\":1.000, \"garam masala\":1.000, \"double cream\":1.000, \"natural yogurt\":1.000, \"bay leaf\":1.000},\n",
       " [], {\"plain flour\":1.000, \"sugar\":1.000, \"butter\":1.000, \"eggs\":1.000, \"fresh ginger root\":1.000, \"salt\":1.000, \"ground cinnamon\":1.000, \"milk\":1.000, \"vanilla extract\":1.000, \"ground ginger\":1.000, \"powdered sugar\":1.000, \"baking powder\":1.000},\n",
       " [], {\"olive oil\":1.000, \"salt\":1.000, \"medium shrimp\":1.000, \"pepper\":1.000, \"garlic\":1.000, \"chopped cilantro\":1.000, \"jalapeno chilies\":1.000, \"flat leaf parsley\":1.000, \"skirt steak\":1.000, \"white vinegar\":1.000, \"sea salt\":1.000, \"bay leaf\":1.000, \"chorizo sausage\":1.000},\n",
       " [], {\"sugar\":1.000, \"pistachio nuts\":1.000, \"white almond bark\":1.000, \"flour\":1.000, \"vanilla extract\":1.000, \"olive oil\":1.000, \"almond extract\":1.000, \"eggs\":1.000, \"baking powder\":1.000, \"dried cranberries\":1.000},\n",
       " [], {\"olive oil\":1.000, \"purple onion\":1.000, \"fresh pineapple\":1.000, \"pork\":1.000, \"poblano peppers\":1.000, \"corn tortillas\":1.000, \"cheddar cheese\":1.000, \"ground black pepper\":1.000, \"salt\":1.000, \"iceberg lettuce\":1.000, \"lime\":1.000, \"jalapeno chilies\":1.000, \"chopped cilantro fresh\":1.000},\n",
       " [], {\"chopped tomatoes\":1.000, \"fresh basil\":1.000, \"garlic\":1.000, \"extra-virgin olive oil\":1.000, \"kosher salt\":1.000, \"flat leaf parsley\":1.000}]"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[:10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " Supp  Conf  Rule\n",
      "0.02 0.47  ginger -> garlic\n",
      "0.02 0.11  garlic -> ginger\n",
      "0.03 0.39  unsalted butter -> all-purpose flour\n",
      "0.03 0.23  all-purpose flour -> unsalted butter\n",
      "0.02 0.30  unsalted butter -> sugar\n",
      "0.02 0.13  sugar -> unsalted butter\n",
      "0.04 0.52  unsalted butter -> salt\n",
      "0.04 0.08  salt -> unsalted butter\n",
      "0.02 0.26  green onions -> soy sauce\n",
      "0.02 0.24  soy sauce -> green onions\n",
      "0.03 0.39  green onions -> salt\n",
      "0.03 0.07  salt -> green onions\n",
      "0.02 0.26  green onions -> garlic\n",
      "0.02 0.11  garlic -> green onions\n",
      "0.02 0.57  fresh parsley -> salt\n",
      "0.02 0.05  salt -> fresh parsley\n",
      "0.03 0.39  large eggs -> all-purpose flour\n",
      "0.03 0.25  all-purpose flour -> large eggs\n",
      "0.02 0.27  large eggs -> all-purpose flour salt\n",
      "0.02 0.70  large eggs all-purpose flour -> salt\n",
      "0.02 0.48  large eggs salt -> all-purpose flour\n",
      "0.02 0.17  all-purpose flour -> large eggs salt\n",
      "0.02 0.26  all-purpose flour salt -> large eggs\n",
      "0.02 0.04  salt -> large eggs all-purpose flour\n",
      "0.02 0.32  large eggs -> sugar\n",
      "0.02 0.15  sugar -> large eggs\n",
      "0.04 0.58  large eggs -> salt\n",
      "0.04 0.09  salt -> large eggs\n",
      "0.03 0.41  carrots -> onions\n",
      "0.03 0.15  onions -> carrots\n",
      "0.03 0.47  carrots -> salt\n",
      "0.03 0.07  salt -> carrots\n",
      "0.02 0.42  grated parmesan cheese -> olive oil\n",
      "0.02 0.10  olive oil -> grated parmesan cheese\n",
      "0.02 0.46  grated parmesan cheese -> salt\n",
      "0.02 0.05  salt -> grated parmesan cheese\n",
      "0.02 0.52  chicken broth -> salt\n",
      "0.02 0.04  salt -> chicken broth\n",
      "0.02 0.47  red bell pepper -> salt\n",
      "0.02 0.05  salt -> red bell pepper\n",
      "0.02 0.63  cooking spray -> salt\n",
      "0.02 0.05  salt -> cooking spray\n",
      "0.03 0.25  all-purpose flour -> baking powder\n",
      "0.03 0.66  baking powder -> all-purpose flour\n",
      "0.02 0.19  all-purpose flour -> baking powder salt\n",
      "0.02 0.76  all-purpose flour baking powder -> salt\n",
      "0.02 0.28  all-purpose flour salt -> baking powder\n",
      "0.02 0.50  baking powder -> all-purpose flour salt\n",
      "0.02 0.68  baking powder salt -> all-purpose flour\n",
      "0.02 0.05  salt -> all-purpose flour baking powder\n",
      "0.03 0.27  all-purpose flour -> sugar\n",
      "0.03 0.20  sugar -> all-purpose flour\n",
      "0.02 0.21  all-purpose flour -> sugar salt\n",
      "0.02 0.75  all-purpose flour sugar -> salt\n",
      "0.02 0.31  all-purpose flour salt -> sugar\n",
      "0.02 0.15  sugar -> all-purpose flour salt\n",
      "0.02 0.31  sugar salt -> all-purpose flour\n",
      "0.02 0.05  salt -> all-purpose flour sugar\n",
      "0.02 0.18  all-purpose flour -> water\n",
      "0.02 0.11  water -> all-purpose flour\n",
      "0.03 0.29  all-purpose flour -> butter\n",
      "0.03 0.28  butter -> all-purpose flour\n",
      "0.02 0.20  all-purpose flour -> butter salt\n",
      "0.02 0.69  all-purpose flour butter -> salt\n",
      "0.02 0.30  all-purpose flour salt -> butter\n",
      "0.02 0.19  butter -> all-purpose flour salt\n",
      "0.02 0.34  butter salt -> all-purpose flour\n",
      "0.02 0.05  salt -> all-purpose flour butter\n",
      "0.02 0.19  all-purpose flour -> eggs\n",
      "0.02 0.26  eggs -> all-purpose flour\n",
      "0.08 0.66  all-purpose flour -> salt\n",
      "0.08 0.17  salt -> all-purpose flour\n",
      "0.02 0.14  garlic cloves -> extra-virgin olive oil\n",
      "0.02 0.32  extra-virgin olive oil -> garlic cloves\n",
      "0.05 0.34  garlic cloves -> olive oil\n",
      "0.05 0.26  olive oil -> garlic cloves\n",
      "0.03 0.18  garlic cloves -> olive oil salt\n",
      "0.03 0.54  garlic cloves olive oil -> salt\n",
      "0.03 0.38  garlic cloves salt -> olive oil\n",
      "0.03 0.14  olive oil -> garlic cloves salt\n",
      "0.03 0.27  olive oil salt -> garlic cloves\n",
      "0.03 0.06  salt -> garlic cloves olive oil\n",
      "0.04 0.26  garlic cloves -> onions\n",
      "0.04 0.21  onions -> garlic cloves\n",
      "0.02 0.13  garlic cloves -> onions salt\n",
      "0.02 0.51  garlic cloves onions -> salt\n",
      "0.02 0.28  garlic cloves salt -> onions\n",
      "0.02 0.10  onions -> garlic cloves salt\n",
      "0.02 0.19  onions salt -> garlic cloves\n",
      "0.02 0.05  salt -> garlic cloves onions\n",
      "0.03 0.21  garlic cloves -> water\n",
      "0.03 0.18  water -> garlic cloves\n",
      "0.02 0.13  garlic cloves -> vegetable oil\n",
      "0.02 0.19  vegetable oil -> garlic cloves\n",
      "0.03 0.17  garlic cloves -> ground black pepper\n",
      "0.03 0.22  ground black pepper -> garlic cloves\n",
      "0.08 0.48  garlic cloves -> salt\n",
      "0.08 0.17  salt -> garlic cloves\n",
      "0.03 0.63  sesame oil -> soy sauce\n",
      "0.03 0.34  soy sauce -> sesame oil\n",
      "0.02 0.55  dried oregano -> salt\n",
      "0.02 0.05  salt -> dried oregano\n",
      "0.03 0.32  kosher salt -> ground black pepper\n",
      "0.03 0.21  ground black pepper -> kosher salt\n",
      "0.03 0.44  extra-virgin olive oil -> salt\n",
      "0.03 0.07  salt -> extra-virgin olive oil\n",
      "0.02 0.47  chopped cilantro fresh -> salt\n",
      "0.02 0.04  salt -> chopped cilantro fresh\n",
      "0.02 0.68  flour -> salt\n",
      "0.02 0.05  salt -> flour\n",
      "0.02 0.55  jalapeno chilies -> salt\n",
      "0.02 0.05  salt -> jalapeno chilies\n",
      "0.02 0.10  olive oil -> ground cumin\n",
      "0.02 0.30  ground cumin -> olive oil\n",
      "0.06 0.28  olive oil -> onions\n",
      "0.06 0.28  onions -> olive oil\n",
      "0.03 0.15  olive oil -> onions salt\n",
      "0.03 0.55  olive oil onions -> salt\n",
      "0.03 0.29  olive oil salt -> onions\n",
      "0.03 0.15  onions -> olive oil salt\n",
      "0.03 0.27  onions salt -> olive oil\n",
      "0.03 0.07  salt -> olive oil onions\n",
      "0.02 0.10  olive oil -> onions garlic\n",
      "0.02 0.36  olive oil onions -> garlic\n",
      "0.02 0.38  olive oil garlic -> onions\n",
      "0.02 0.10  onions -> olive oil garlic\n",
      "0.02 0.30  onions garlic -> olive oil\n",
      "0.02 0.11  garlic -> olive oil onions\n",
      "0.02 0.10  olive oil -> black pepper\n",
      "0.02 0.31  black pepper -> olive oil\n",
      "0.03 0.15  olive oil -> water\n",
      "0.03 0.16  water -> olive oil\n",
      "0.04 0.19  olive oil -> ground black pepper\n",
      "0.04 0.32  ground black pepper -> olive oil\n",
      "0.02 0.12  olive oil -> ground black pepper salt\n",
      "0.02 0.63  olive oil ground black pepper -> salt\n",
      "0.02 0.23  olive oil salt -> ground black pepper\n",
      "0.02 0.20  ground black pepper -> olive oil salt\n",
      "0.02 0.35  ground black pepper salt -> olive oil\n",
      "0.02 0.05  salt -> olive oil ground black pepper\n",
      "0.02 0.11  olive oil -> tomatoes\n",
      "0.02 0.29  tomatoes -> olive oil\n",
      "0.11 0.52  olive oil -> salt\n",
      "0.11 0.23  salt -> olive oil\n",
      "0.03 0.15  olive oil -> salt pepper\n",
      "0.03 0.28  olive oil salt -> pepper\n",
      "0.03 0.89  olive oil pepper -> salt\n",
      "0.03 0.06  salt -> olive oil pepper\n",
      "0.03 0.30  salt pepper -> olive oil\n",
      "0.03 0.26  pepper -> olive oil salt\n",
      "0.03 0.15  olive oil -> salt garlic\n",
      "0.03 0.28  olive oil salt -> garlic\n",
      "0.03 0.57  olive oil garlic -> salt\n",
      "0.03 0.07  salt -> olive oil garlic\n",
      "0.03 0.32  salt garlic -> olive oil\n",
      "0.03 0.16  garlic -> olive oil salt\n",
      "0.03 0.16  olive oil -> pepper\n",
      "0.03 0.30  pepper -> olive oil\n",
      "0.05 0.26  olive oil -> garlic\n",
      "0.05 0.28  garlic -> olive oil\n",
      "0.03 0.74  baking powder -> salt\n",
      "0.03 0.07  salt -> baking powder\n",
      "0.04 0.24  sugar -> water\n",
      "0.04 0.21  water -> sugar\n",
      "0.02 0.13  sugar -> butter\n",
      "0.02 0.18  butter -> sugar\n",
      "0.03 0.16  sugar -> soy sauce\n",
      "0.03 0.31  soy sauce -> sugar\n",
      "0.08 0.48  sugar -> salt\n",
      "0.08 0.17  salt -> sugar\n",
      "0.02 0.13  sugar -> garlic\n",
      "0.02 0.11  garlic -> sugar\n",
      "0.02 0.34  ground cumin -> onions\n",
      "0.02 0.12  onions -> ground cumin\n",
      "0.04 0.56  ground cumin -> salt\n",
      "0.04 0.08  salt -> ground cumin\n",
      "0.03 0.66  oil -> salt\n",
      "0.03 0.07  salt -> oil\n",
      "0.03 0.60  chili powder -> salt\n",
      "0.03 0.07  salt -> chili powder\n",
      "0.02 0.61  lemon juice -> salt\n",
      "0.02 0.05  salt -> lemon juice\n",
      "0.05 0.25  onions -> water\n",
      "0.05 0.26  water -> onions\n",
      "0.03 0.16  onions -> water salt\n",
      "0.03 0.63  onions water -> salt\n",
      "0.03 0.28  onions salt -> water\n",
      "0.03 0.17  water -> onions salt\n",
      "0.03 0.31  water salt -> onions\n",
      "0.03 0.07  salt -> onions water\n",
      "0.02 0.12  onions -> butter\n",
      "0.02 0.19  butter -> onions\n",
      "0.03 0.15  onions -> vegetable oil\n",
      "0.03 0.27  vegetable oil -> onions\n",
      "0.03 0.15  onions -> ground black pepper\n",
      "0.03 0.25  ground black pepper -> onions\n",
      "0.03 0.15  onions -> tomatoes\n",
      "0.03 0.40  tomatoes -> onions\n",
      "0.11 0.55  onions -> salt\n",
      "0.11 0.24  salt -> onions\n",
      "0.03 0.17  onions -> salt pepper\n",
      "0.03 0.31  onions salt -> pepper\n",
      "0.03 0.90  onions pepper -> salt\n",
      "0.03 0.07  salt -> onions pepper\n",
      "0.03 0.35  salt pepper -> onions\n",
      "0.03 0.30  pepper -> onions salt\n",
      "0.04 0.20  onions -> salt garlic\n",
      "0.04 0.37  onions salt -> garlic\n",
      "0.04 0.60  onions garlic -> salt\n",
      "0.04 0.09  salt -> onions garlic\n",
      "0.04 0.43  salt garlic -> onions\n",
      "0.04 0.22  garlic -> onions salt\n",
      "0.04 0.19  onions -> pepper\n",
      "0.04 0.34  pepper -> onions\n",
      "0.07 0.33  onions -> garlic\n",
      "0.07 0.36  garlic -> onions\n",
      "0.02 0.56  cayenne pepper -> salt\n",
      "0.02 0.05  salt -> cayenne pepper\n",
      "0.05 0.68  black pepper -> salt\n",
      "0.05 0.10  salt -> black pepper\n",
      "0.02 0.12  water -> soy sauce\n",
      "0.02 0.27  soy sauce -> water\n",
      "0.03 0.14  water -> vegetable oil\n",
      "0.03 0.23  vegetable oil -> water\n",
      "0.02 0.11  water -> ground black pepper\n",
      "0.02 0.17  ground black pepper -> water\n",
      "0.10 0.53  water -> salt\n",
      "0.10 0.22  salt -> water\n",
      "0.02 0.13  water -> salt garlic\n",
      "0.02 0.24  water salt -> garlic\n",
      "0.02 0.59  water garlic -> salt\n",
      "0.02 0.05  salt -> water garlic\n",
      "0.02 0.25  salt garlic -> water\n",
      "0.02 0.13  garlic -> water salt\n",
      "0.02 0.11  water -> pepper\n",
      "0.02 0.19  pepper -> water\n",
      "0.04 0.22  water -> garlic\n",
      "0.04 0.22  garlic -> water\n",
      "0.02 0.17  butter -> milk\n",
      "0.02 0.37  milk -> butter\n",
      "0.07 0.57  butter -> salt\n",
      "0.07 0.15  salt -> butter\n",
      "0.03 0.32  soy sauce -> salt\n",
      "0.03 0.06  salt -> soy sauce\n",
      "0.03 0.37  soy sauce -> garlic\n",
      "0.03 0.16  garlic -> soy sauce\n",
      "0.02 0.58  garlic powder -> salt\n",
      "0.02 0.05  salt -> garlic powder\n",
      "0.05 0.48  vegetable oil -> salt\n",
      "0.05 0.12  salt -> vegetable oil\n",
      "0.02 0.21  vegetable oil -> garlic\n",
      "0.02 0.13  garlic -> vegetable oil\n",
      "0.03 0.60  milk -> salt\n",
      "0.03 0.08  salt -> milk\n",
      "0.05 0.57  eggs -> salt\n",
      "0.05 0.11  salt -> eggs\n",
      "0.07 0.57  ground black pepper -> salt\n",
      "0.07 0.15  salt -> ground black pepper\n",
      "0.03 0.27  ground black pepper -> garlic\n",
      "0.03 0.17  garlic -> ground black pepper\n",
      "0.04 0.55  tomatoes -> salt\n",
      "0.04 0.09  salt -> tomatoes\n",
      "0.02 0.28  tomatoes -> garlic\n",
      "0.02 0.11  garlic -> tomatoes\n",
      "0.02 0.05  salt -> purple onion\n",
      "0.02 0.49  purple onion -> salt\n",
      "0.10 0.21  salt -> pepper\n",
      "0.10 0.87  pepper -> salt\n",
      "0.03 0.06  salt -> pepper garlic\n",
      "0.03 0.30  salt pepper -> garlic\n",
      "0.03 0.31  salt garlic -> pepper\n",
      "0.03 0.26  pepper -> salt garlic\n",
      "0.03 0.89  pepper garlic -> salt\n",
      "0.03 0.16  garlic -> salt pepper\n",
      "0.09 0.21  salt -> garlic\n",
      "0.09 0.51  garlic -> salt\n",
      "0.03 0.29  pepper -> garlic\n",
      "0.03 0.18  garlic -> pepper\n"
     ]
    }
   ],
   "source": [
    "rules = Orange.associate.AssociationRulesSparseInducer(data, support=0.02)\n",
    "print \"%5s %5s  %s\" % (\"Supp\", \"Conf\", \"Rule\")\n",
    "for r in rules:\n",
    "    print \"%4.2f %4.2f  %s\" % (r.support, r.confidence, r)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " Supp  Conf Rule\n",
      "0.01 0.40  cilantro -> garlic\n",
      "0.01 0.42  cumin -> chili powder\n",
      "0.01 0.42  cumin -> garlic\n",
      "0.01 0.49  rice vinegar -> soy sauce\n",
      "0.02 0.47  ginger -> garlic\n",
      "0.01 0.50  ground turmeric -> onions\n",
      "0.01 0.48  tomato paste -> onions\n",
      "0.01 0.63  baking soda -> all-purpose flour\n",
      "0.01 0.53  baking soda -> baking powder\n",
      "0.01 0.44  baking soda -> sugar\n",
      "0.01 0.57  buttermilk -> all-purpose flour\n",
      "0.01 0.43  cumin seed -> onions\n",
      "0.01 0.49  bay leaves -> onions\n",
      "0.02 0.41  diced tomatoes -> onions\n",
      "0.01 0.59  celery -> onions\n",
      "0.01 0.54  potatoes -> onions\n",
      "0.03 0.41  carrots -> onions\n",
      "0.02 0.56  green bell pepper -> onions\n",
      "0.02 0.41  chicken broth -> onions\n",
      "0.03 0.66  baking powder -> all-purpose flour\n",
      "0.01 0.44  vanilla extract -> all-purpose flour\n",
      "0.01 0.68  ground coriander -> ground cumin\n",
      "0.02 0.42  baking powder -> sugar\n",
      "0.02 0.50  vanilla extract -> sugar\n",
      "0.01 0.55  bay leaf -> onions\n",
      "0.01 0.56  garam masala -> onions\n",
      "0.01 0.54  green chilies -> onions\n"
     ]
    }
   ],
   "source": [
    "rules = Orange.associate.AssociationRulesSparseInducer(data, support=0.01, maxItemSets=100000, confidence=0.4)\n",
    "print \"%5s %5s %s\" % (\"Supp\", \"Conf\", \"Rule\")\n",
    "for r in rules:\n",
    "    if 'salt' not in str(r) and 'oil' not in str(r):\n",
    "        print \"%4.2f %4.2f  %s\" % (r.support, r.confidence, r)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "397.74"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(data) * 0.01"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
