{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Линейная регрессия"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import statsmodels\n",
    "import scipy as sc\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import statsmodels.formula.api as smf\n",
    "import statsmodels.stats.api as sms\n",
    "from statsmodels.graphics.regressionplots import plot_leverage_resid2\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Populating the interactive namespace from numpy and matplotlib\n"
     ]
    }
   ],
   "source": [
    "%pylab inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Постановка"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "По 1260 опрошенным имеются следующие данные:\n",
    "\n",
    "* заработная плата за час работы, $;\n",
    "* опыт работы, лет;\n",
    "* образование, лет;\n",
    "* внешняя привлекательность, в баллах от 1 до 5;\n",
    "* бинарные признаки: пол, семейное положение, состояние здоровья (хорошее/плохое), членство в профсоюзе, цвет кожи (белый/чёрный), занятость в сфере обслуживания (да/нет).\n",
    "\n",
    "Требуется оценить влияние внешней привлекательности на уровень заработка с учётом всех остальных факторов.\n",
    "\n",
    "Hamermesh D.S., Biddle J.E. (1994) Beauty and the Labor Market, American Economic Review, 84, 1174–1194.\n",
    "\n",
    "Данные:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wage</th>\n",
       "      <th>exper</th>\n",
       "      <th>union</th>\n",
       "      <th>goodhlth</th>\n",
       "      <th>black</th>\n",
       "      <th>female</th>\n",
       "      <th>married</th>\n",
       "      <th>service</th>\n",
       "      <th>educ</th>\n",
       "      <th>looks</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.73</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4.28</td>\n",
       "      <td>28</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>7.96</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>11.57</td>\n",
       "      <td>38</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>11.42</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>16</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    wage  exper  union  goodhlth  black  female  married  service  educ  looks\n",
       "0   5.73     30      0         1      0       1        1        1    14      4\n",
       "1   4.28     28      0         1      0       1        1        0    12      3\n",
       "2   7.96     35      0         1      0       1        0        0    10      4\n",
       "3  11.57     38      0         1      0       0        1        1    16      3\n",
       "4  11.42     27      0         1      0       0        1        0    16      3"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw = pd.read_csv(\"beauty.csv\", sep=\";\", index_col=False) \n",
    "raw.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Посмотрим на матрицу диаграмм рассеяния по количественным признакам:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Your code"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "Оценим сбалансированность выборки по категориальным признакам:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Your code"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "У каждого признака все значения встречаются достаточно много раз, так что всё в порядке."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "## Предобработка"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "data = raw"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Посмотрим на распределение целевого признака — уровня заработной платы и его логарифма: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Your code"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "Один человек в выборке получает 77.72\\$ в час, остальные — меньше 45\\$; удалим этого человека, чтобы регрессия на него не перенастроилась."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Your code"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Посмотрим на распределение оценок привлекательности: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nRgrJ97fVAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1eb955416a0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize(8,7))\n",
    "data.groupby('looks')['looks'].agg(lambda x: len(x)).plot(kind='bar', width=0.9)\n",
    "plt.xticks(rotation=0)\n",
    "plt.xlabel('Looks', fontsize=14)\n",
    "pylab.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "В группах looks=1 и looks=5 слишком мало наблюдений. Превратим признак looks в категориальный и закодируем с помощью фиктивных переменных:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Your code"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Данные теперь:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wage</th>\n",
       "      <th>exper</th>\n",
       "      <th>union</th>\n",
       "      <th>goodhlth</th>\n",
       "      <th>black</th>\n",
       "      <th>female</th>\n",
       "      <th>married</th>\n",
       "      <th>service</th>\n",
       "      <th>educ</th>\n",
       "      <th>looks</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.73</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4.28</td>\n",
       "      <td>28</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>7.96</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>11.57</td>\n",
       "      <td>38</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>11.42</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>16</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    wage  exper  union  goodhlth  black  female  married  service  educ  looks\n",
       "0   5.73     30      0         1      0       1        1        1    14      4\n",
       "1   4.28     28      0         1      0       1        1        0    12      3\n",
       "2   7.96     35      0         1      0       1        0        0    10      4\n",
       "3  11.57     38      0         1      0       0        1        1    16      3\n",
       "4  11.42     27      0         1      0       0        1        0    16      3"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Построение модели"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Простейшая модель"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Построим линейную модель по всем признакам."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "m1 = smf.ols('wage ~ exper + union + goodhlth + black + female + married +'\\\n",
    "                    'service + educ + belowavg + aboveavg', \n",
    "             data=data)\n",
    "fitted = m1.fit()\n",
    "print(fitted.summary())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Посмотрим на распределение остатков (Q-Q график и гистграмма):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Your code"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Логарифмируем отклик"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "m2 = smf.ols('np.log(wage) ~ exper + union + goodhlth + black + female + married +'\\\n",
    "                            'service + educ + belowavg + aboveavg', data=data)\n",
    "fitted = m2.fit()\n",
    "print(fitted.summary())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Посмотрим на распределение остатков (Q-Q график и гистограмма)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Your code"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Посмотрим теперь на зависимость остатков от непрерывных признаков:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Your code"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Добавляем квадрат опыта работы"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "m3 = smf.ols('np.log(wage) ~ exper + np.power(exper,2) + union + goodhlth + black + female +'\\\n",
    "                            'married + service + educ + belowavg + aboveavg', data=data)\n",
    "fitted = m3.fit()\n",
    "print(fitted.summary())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Посмотрим на распределение остатков (Q-Q график и гистограмма) и их зависимость от непрерывных признаков"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Your code"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Используем критерий Бройша-Пагана для проверки гомоскедастичности ошибок:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "print('Breusch-Pagan test: p=%f' % sms.het_breushpagan(fitted.resid, fitted.model.exog)[1])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Какие выводы? ЧТо нужно попробовать сделать?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Удаляем незначимые признаки"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Your code of m5 regressor"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Посмотрим, не стала ли модель от удаления признаков значимо хуже, с помощью критерия Фишера:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "print(\"F=%f, p=%f, k1=%f\" % m4.fit().compare_f_test(m5.fit()))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "Проверим, нет ли наблюдений, которые слишком сильно влияют на регрессионное уравнение:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Your code"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Выводы"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python [conda root]",
   "language": "python",
   "name": "conda-root-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
