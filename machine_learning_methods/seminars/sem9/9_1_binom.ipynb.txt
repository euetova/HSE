{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Биномиальный критерий для доли"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from scipy import stats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Populating the interactive namespace from numpy and matplotlib\n"
     ]
    }
   ],
   "source": [
    "%pylab inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Shaken, not stirred"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Джеймс Бонд говорит, что предпочитает мартини взболтанным, но не смешанным. Проведём слепой тест (blind test): n раз предложим ему пару напитков и выясним, какой из двух он предпочитает:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* **выборка** - бинарный вектор длины $n$, где 1 - Джеймс Бонд предпочел смешанный напиток, 0 - взболтанный;\n",
    "* **гипотеза $H_0$** - Джеймс Бонд не различает 2 вида напитков и выбирает наугад;\n",
    "* **статистика $t$** - количество единиц в выборке."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "n = 16\n",
    "n_samples = 1000\n",
    "samples = np.random.randint(2, size = (n_samples, n))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "t_stat = map(sum, samples)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x9295898>"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAg4AAAFkCAYAAABIPLOYAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAAPYQAAD2EBqD+naQAAHgFJREFUeJzt3XuUXWWZ5/HvE0MIFUiypEgytpZGIqFYDjgpBhpsIIjT\nDOoAytKmsLiubq8Iq3RWc48EmhkuQoBWBNYwNHQgDDdH7BUJF5VBQGgTRVrKRCV4hITAERJoQnHL\nO3/sE6wUSXir6pyz6/L9rHUW1N7vOe+zc6r2+Z137/3uSCkhSZKUY1zZBUiSpJHD4CBJkrIZHCRJ\nUjaDgyRJymZwkCRJ2QwOkiQpm8FBkiRlMzhIkqRsBgdJkpTN4CBJkrINKDhExGkR8UhEvBgRayLi\nexGxy2banRMRqyJifUTcHRGz+q3fNiK+ExHViHgpIm6NiGlD3RhJktRYAx1x2A/4R2Bv4OPANsBd\nEbHdxgYRcQpwIvAFYC/gZWBJREzo8zqXAp8EjgD2B94D3DbIbZAkSU0SQ7nJVUS0As8C+6eUflpb\ntgq4KKW0oPbzZGANcGxK6ebaz88BR6aUvldrMxvoAf4ypfTIUDZIkiQ1zlDPcZgKJOB5gIiYCcwA\n7t3YIKX0IvAwsE9t0Z7A+H5tlgOVPm0kSdIwNH6wT4yIoDjk8NOU0uO1xTMogsSafs3X1NYBTAde\nqwWKLbXp39eOwMHAk0DvYGuWJGkMmgh8AFiSUvrTUF9s0MEBuALYDfjoUIvIcDBwQxP6kSRptPo8\ncONQX2RQwSEivg18AtgvpbS6z6pngKAYVeg76jAd+EWfNhMiYnK/UYfptXWb8yTAwoULaW9vH0zJ\nI0Z3dzcLFiwou4yGGyvbCWNnW93O0cXtHD16enro6uqC2mfpUA04ONRCw2HAASmlSt91KaWVEfEM\ncBDwq1r7yRRXYXyn1mwp8EatTd+TI9uAh7bQbS9Ae3s7c+bMGWjJI8qUKVNG/TbC2NlOGDvb6naO\nLm7nqFSXQ/0DCg4RcQXQCRwKvBwR02ur1qWUNhZ0KXBmRPyOIt2cCzwFfB+KkyUj4hrgkoh4AXgJ\nuBx4wCsqJEka3gY64vAlipMff9Jv+fHA9QAppQsjogW4iuKqi/uBQ1JKr/Vp3w28CdwKbAvcCXx1\noMVLkqTmGlBwSCllXb6ZUjobOHsr618FvlZ7SJKkEcJ7VQwznZ2dZZfQFGNlO2HsbKvbObq4ndqS\nIc0c2SwRMQdYunTp0rF0EoskSUO2bNkyOjo6ADpSSsuG+npDmcdBkjSKVSoVqtVq2WUoQ2trK21t\nbU3py+AgSXqbSqVCe3s769evL7sUZWhpaaGnp6cp4cHgIEl6m2q1yvr168fExHsj3cYJnqrVqsFB\nklSusTDxngbGqyokSVI2g4MkScpmcJAkSdkMDpIkKZvBQZIkZfOqCknSgA2HyaGGMunRQw89xF13\n3UV3dzeTJ0+ua13f/e53aWlp4dhjjx3U81evXs3VV1/Npz/9aXbfffe61lYPBgdJ0oBUKhVmz26n\nt7fcyaEmTmxh+fLBTXr04IMPcs4553D88cfXPThcccUV7LTTToMODqtWrWL+/PnMnDnT4CBJGvmq\n1WotNCwEypocqofe3sFPejSc79M0nGsDg4OkOilj6LqZ8/Nrc9qBkTc51Pz585k/fz4RwQc+8AEA\nIoKVK1e+4+/TmjVrOPXUU7nnnnt47rnnePe7381ee+3F5ZdfTltbGzNnzuQPf/gDAOPGFacRzp07\nlx/96Ee88MILnHfeedx1112sXLmScePG8dGPfpTzzz//rZGF++67jwMPPJCI4LjjjuO4444jIrj2\n2ms55phjGvePMgAGB0lDVtbQ9VCGqjV2HXHEEaxYsYKbbrqJyy67jB133BGAnXba6R2f+5nPfIae\nnh5OOukk3v/+9/Pss89y9913U6lUaGtr47LLLuPEE09khx124MwzzySlxPTp0wF44oknuOOOO/js\nZz/LzJkzWbNmDVdddRVz587l8ccfZ8aMGbS3t3POOecwb948vvjFL7LffvsBsO+++zbuH2SADA6S\nhqycoeuhDVVr7Prwhz/MnDlzuOmmmzjssMOyf3/WrVvHQw89xLe+9S2+/vWvv7X8lFNOeev/Dz30\nUM444wx22mknOjs7N3n+7rvvzooVKzZZdvTRRzN79myuueYazjjjDKZNm8YhhxzCvHnz2GeffTjq\nqKOGsKWNYXCQVEcjc+hayrHddtsxYcIEfvKTn3DCCScwderUAT1/m222eev/N2zYwNq1a2lpaWH2\n7NksW7as3uU2jPM4SJKUYcKECVxwwQX88Ic/ZPr06RxwwAFcdNFFrFmzJuv5KSUWLFjALrvswrbb\nbktrayvTpk3jscceY926dQ2uvn4MDpIkZTr55JNZsWIF559/Pttttx3z5s2jvb2dRx999B2fe955\n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\nZfv/wOMEl8R3W7oAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x77bfe80>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "pylab.hist(t_stat, bins = 16, color = 'b', range = (0, 16), label = 't_stat')\n",
    "pylab.legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Нулевое распределение статистики — биномиальное $Bin(n, 0.5)$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Двусторонняя альтернатива"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**гипотеза $H_1$** - Джеймс Бонд предпочитает какой-то определённый вид мартини."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.076812744140625"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stats.binom_test(12, 16, 0.5, alternative = 'two-sided')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.021270751953125"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stats.binom_test(13, 16, 0.5, alternative = 'two-sided')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Односторонняя альтернатива"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**гипотеза $H_1$** - Джеймс Бонд предпочитает смешанный напиток."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0384063720703125"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stats.binom_test(12, 16, 0.5, alternative = 'greater')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.10505676269531246"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stats.binom_test(11, 16, 0.5, alternative = 'greater')"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python [conda root]",
   "language": "python",
   "name": "conda-root-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
